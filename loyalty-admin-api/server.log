
> loyalty-admin-api@1.0.0 start
> node server.js

[dotenv@17.0.1] injecting env (13) from .env â€“ [tip] encrypt with dotenvx: https://dotenvx.com
[dotenv@17.0.1] injecting env (0) from .env â€“ [tip] encrypt with dotenvx: https://dotenvx.com
ðŸ”„ Initializing database...
Executing (default): SELECT 1+1 AS result
Executing (default): SELECT 1+1 AS result
âœ… Database connection established.
Executing (default): SELECT name FROM sqlite_master WHERE type='table' AND name='business';
âœ… Database connection established successfully.
Executing (default): PRAGMA INDEX_LIST(`business`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_business_1`)
Executing (default): SELECT name FROM sqlite_master WHERE type='table' AND name='admins';
Executing (default): PRAGMA INDEX_LIST(`admins`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_admins_1`)
Executing (default): SELECT name FROM sqlite_master WHERE type='table' AND name='themes';
Executing (default): PRAGMA INDEX_LIST(`themes`)
Executing (default): SELECT name FROM sqlite_master WHERE type='table' AND name='rankings';
Executing (default): PRAGMA INDEX_LIST(`rankings`)
Executing (default): PRAGMA INDEX_INFO(`rankings_business_id_level`)
Executing (default): PRAGMA INDEX_INFO(`rankings_business_id`)
Executing (default): PRAGMA INDEX_INFO(`rankings_points_required`)
Executing (default): SELECT name FROM sqlite_master WHERE type='table' AND name='coupons';
Executing (default): PRAGMA INDEX_LIST(`coupons`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_coupons_1`)
Executing (default): PRAGMA INDEX_INFO(`coupons_business_id_code`)
Executing (default): PRAGMA INDEX_INFO(`coupons_business_id`)
Executing (default): PRAGMA INDEX_INFO(`coupons_is_active`)
Executing (default): PRAGMA INDEX_INFO(`coupons_expiration_date`)
Executing (default): SELECT name FROM sqlite_master WHERE type='table' AND name='superadmins';
Executing (default): PRAGMA INDEX_LIST(`superadmins`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_superadmins_1`)
Executing (default): SELECT name FROM sqlite_master WHERE type='table' AND name='point_tiers';
Executing (default): PRAGMA INDEX_LIST(`point_tiers`)
Executing (default): PRAGMA INDEX_INFO(`point_tiers_business_id_tier_level`)
Executing (default): PRAGMA INDEX_INFO(`point_tiers_business_id`)
Executing (default): PRAGMA INDEX_INFO(`point_tiers_points_required`)
Executing (default): PRAGMA INDEX_INFO(`point_tiers_sort_order`)
Executing (default): SELECT name FROM sqlite_master WHERE type='table' AND name='users';
Executing (default): PRAGMA INDEX_LIST(`users`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)
Executing (default): PRAGMA INDEX_INFO(`users_email`)
Executing (default): PRAGMA INDEX_INFO(`users_phone_number`)
Executing (default): SELECT name FROM sqlite_master WHERE type='table' AND name='user_businesses';
Executing (default): PRAGMA INDEX_LIST(`user_businesses`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_user_businesses_1`)
Executing (default): PRAGMA INDEX_INFO(`user_businesses_user_id_business_id`)
Executing (default): PRAGMA INDEX_INFO(`user_businesses_business_id_member_id`)
Executing (default): PRAGMA INDEX_INFO(`user_businesses_user_id`)
Executing (default): PRAGMA INDEX_INFO(`user_businesses_business_id`)
Executing (default): PRAGMA INDEX_INFO(`user_businesses_member_id`)
Executing (default): PRAGMA INDEX_INFO(`user_businesses_total_points`)
Executing (default): PRAGMA INDEX_INFO(`user_businesses_current_ranking_id`)
Executing (default): SELECT name FROM sqlite_master WHERE type='table' AND name='transactions';
Executing (default): PRAGMA INDEX_LIST(`transactions`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_transactions_1`)
Executing (default): PRAGMA INDEX_INFO(`transactions_business_id`)
Executing (default): PRAGMA INDEX_INFO(`transactions_user_id`)
Executing (default): PRAGMA INDEX_INFO(`transactions_transaction_id`)
Executing (default): PRAGMA INDEX_INFO(`transactions_status`)
Executing (default): PRAGMA INDEX_INFO(`transactions_transaction_date`)
Executing (default): PRAGMA INDEX_INFO(`transactions_business_id_user_id`)
Executing (default): SELECT name FROM sqlite_master WHERE type='table' AND name='points_transactions';
Executing (default): PRAGMA INDEX_LIST(`points_transactions`)
Executing (default): PRAGMA INDEX_INFO(`points_transactions_business_id`)
Executing (default): PRAGMA INDEX_INFO(`points_transactions_user_id`)
Executing (default): PRAGMA INDEX_INFO(`points_transactions_transaction_id`)
Executing (default): PRAGMA INDEX_INFO(`points_transactions_type`)
Executing (default): PRAGMA INDEX_INFO(`points_transactions_reference_id_reference_type`)
Executing (default): PRAGMA INDEX_INFO(`points_transactions_created_at`)
Executing (default): PRAGMA INDEX_INFO(`points_transactions_expires_at`)
Executing (default): PRAGMA INDEX_INFO(`points_transactions_business_id_user_id_created_at`)
Executing (default): SELECT name FROM sqlite_master WHERE type='table' AND name='rewards';
Executing (default): PRAGMA INDEX_LIST(`rewards`)
Executing (default): PRAGMA INDEX_INFO(`rewards_business_id`)
Executing (default): PRAGMA INDEX_INFO(`rewards_points_cost`)
Executing (default): PRAGMA INDEX_INFO(`rewards_type`)
Executing (default): PRAGMA INDEX_INFO(`rewards_is_active`)
Executing (default): PRAGMA INDEX_INFO(`rewards_is_featured`)
Executing (default): PRAGMA INDEX_INFO(`rewards_valid_from_valid_until`)
Executing (default): PRAGMA INDEX_INFO(`rewards_business_id_is_active_sort_order`)
Executing (default): SELECT name FROM sqlite_master WHERE type='table' AND name='user_point_tiers';
Executing (default): PRAGMA INDEX_LIST(`user_point_tiers`)
Executing (default): PRAGMA INDEX_INFO(`user_point_tiers_business_id_user_id`)
Executing (default): PRAGMA INDEX_INFO(`user_point_tiers_business_id`)
Executing (default): PRAGMA INDEX_INFO(`user_point_tiers_user_id`)
Executing (default): PRAGMA INDEX_INFO(`user_point_tiers_current_tier_id`)
Executing (default): PRAGMA INDEX_INFO(`user_point_tiers_tier_points`)
Executing (default): SELECT name FROM sqlite_master WHERE type='table' AND name='menu_items';
Executing (default): PRAGMA INDEX_LIST(`menu_items`)
Executing (default): PRAGMA INDEX_INFO(`menu_items_business_id`)
Executing (default): PRAGMA INDEX_INFO(`menu_items_category`)
Executing (default): PRAGMA INDEX_INFO(`menu_items_is_available`)
Executing (default): PRAGMA INDEX_INFO(`menu_items_is_active`)
Executing (default): PRAGMA INDEX_INFO(`menu_items_sort_order`)
Executing (default): PRAGMA INDEX_INFO(`menu_items_business_id_category`)
Executing (default): SELECT name FROM sqlite_master WHERE type='table' AND name='menu_item_purchases';
Executing (default): PRAGMA INDEX_LIST(`menu_item_purchases`)
Executing (default): PRAGMA INDEX_INFO(`menu_item_purchases_business_id`)
Executing (default): PRAGMA INDEX_INFO(`menu_item_purchases_user_id`)
Executing (default): PRAGMA INDEX_INFO(`menu_item_purchases_menu_item_id`)
Executing (default): PRAGMA INDEX_INFO(`menu_item_purchases_status`)
Executing (default): PRAGMA INDEX_INFO(`menu_item_purchases_purchase_date`)
Executing (default): PRAGMA INDEX_INFO(`menu_item_purchases_business_id_user_id`)
Executing (default): PRAGMA INDEX_INFO(`menu_item_purchases_business_id_purchase_date`)
âœ… Database tables synchronized.
Executing (default): SELECT count(*) AS `count` FROM `admins` AS `Admin`;
Executing (default): SELECT `id`, `name`, `business_code` AS `businessCode`, `description`, `logo_url` AS `logoUrl`, `contact_email` AS `contactEmail`, `contact_phone` AS `contactPhone`, `address`, `operating_hours` AS `operatingHours`, `category`, `website`, `established`, `member_since` AS `memberSince`, `total_members` AS `totalMembers`, `features`, `social_media` AS `socialMedia`, `loyalty_benefits` AS `loyaltyBenefits`, `created_at`, `updated_at` FROM `business` AS `Business` LIMIT 1;
Executing (default): SELECT `id`, `name`, `business_code` AS `businessCode`, `description`, `logo_url` AS `logoUrl`, `contact_email` AS `contactEmail`, `contact_phone` AS `contactPhone`, `address`, `operating_hours` AS `operatingHours`, `category`, `website`, `established`, `member_since` AS `memberSince`, `total_members` AS `totalMembers`, `features`, `social_media` AS `socialMedia`, `loyalty_benefits` AS `loyaltyBenefits`, `created_at`, `updated_at` FROM `business` AS `Business` LIMIT 1;
Executing (default): SELECT count(*) AS `count` FROM `themes` AS `Theme` WHERE `Theme`.`business_id` = 1;
Executing (default): SELECT count(*) AS `count` FROM `rankings` AS `Ranking` WHERE `Ranking`.`business_id` = 1;
Executing (default): SELECT count(*) AS `count` FROM `coupons` AS `Coupon` WHERE `Coupon`.`business_id` = 1;
Executing (default): SELECT count(*) AS `count` FROM `superadmins` AS `SuperAdmin`;
ðŸŽ‰ Database initialization completed successfully!
ðŸš€ Server running on port 3001
ðŸ“± Loyalty Admin API ready
ðŸ”— Health check: http://localhost:3001/health
Executing (default): SELECT `id`, `first_name` AS `firstName`, `last_name` AS `lastName`, `email`, `phone_number` AS `phoneNumber`, `date_of_birth` AS `dateOfBirth`, `profile_image_url` AS `profileImageUrl`, `is_active` AS `isActive`, `last_login` AS `lastLogin`, `created_at`, `updated_at` FROM `users` AS `User` WHERE `User`.`id` = 7;
Join business request: { businessCode: 'DEMO1', userId: 7 }
Executing (default): SELECT `id`, `name`, `business_code` AS `businessCode`, `description`, `logo_url` AS `logoUrl`, `contact_email` AS `contactEmail`, `contact_phone` AS `contactPhone`, `address`, `operating_hours` AS `operatingHours`, `category`, `website`, `established`, `member_since` AS `memberSince`, `total_members` AS `totalMembers`, `features`, `social_media` AS `socialMedia`, `loyalty_benefits` AS `loyaltyBenefits`, `created_at`, `updated_at` FROM `business` AS `Business` WHERE `Business`.`business_code` = 'DEMO1';
Found business: 1
Executing (default): SELECT `id`, `user_id` AS `userId`, `business_id` AS `businessId`, `member_id` AS `memberId`, `join_date` AS `joinDate`, `total_points` AS `totalPoints`, `available_points` AS `availablePoints`, `lifetime_points` AS `lifetimePoints`, `current_ranking_id` AS `currentRankingId`, `last_activity` AS `lastActivity`, `is_active` AS `isActive`, `preferences`, `qr_code_data` AS `qrCodeData`, `created_at`, `updated_at` FROM `user_businesses` AS `UserBusiness` WHERE `UserBusiness`.`user_id` = 7 AND `UserBusiness`.`business_id` = 1 LIMIT 1;
Existing membership: None
Executing (default): SELECT `id`, `business_id` AS `businessId`, `level`, `title`, `points_required` AS `pointsRequired`, `benefits`, `color`, `icon_url` AS `iconUrl`, `created_at`, `updated_at` FROM `rankings` AS `Ranking` WHERE `Ranking`.`business_id` = 1 ORDER BY `pointsRequired` ASC LIMIT 1;
Initial ranking: 1
Creating membership with: { userId: 7, businessId: 1, currentRankingId: 1 }
UserBusiness beforeCreate hook triggered
Generating business user ID for business: 1
Executing (default): SELECT COUNT(*) as count FROM user_businesses WHERE business_id = 1 AND member_id = 'TKAITQEK'
Generated business user ID: TKAITQEK
Generating QR code data for user: 7
Executing (default): SELECT business_code FROM business WHERE id = 1
Generated QR code data: {
  appUserId: 7,
  businessCode: 'DEMO1',
  joinDate: '2025-07-11T02:01:39.425Z',
  generatedAt: '2025-07-11T02:01:39.427Z'
}
Executing (default): INSERT INTO `user_businesses` (`id`,`user_id`,`business_id`,`member_id`,`join_date`,`total_points`,`available_points`,`lifetime_points`,`current_ranking_id`,`is_active`,`preferences`,`qr_code_data`,`created_at`,`updated_at`) VALUES (NULL,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13);
Membership created successfully: 10
Executing (default): INSERT INTO `points_transactions` (`id`,`business_id`,`user_id`,`type`,`points`,`description`,`reference_id`,`reference_type`,`balance_before`,`balance_after`,`multiplier`,`metadata`,`is_reversed`,`created_at`,`updated_at`) VALUES (NULL,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14);
Executing (default): UPDATE `user_businesses` SET `total_points`=$1,`available_points`=$2,`lifetime_points`=$3,`last_activity`=$4,`updated_at`=$5 WHERE `id` = $6
Welcome bonus and points updated successfully
Executing (default): SELECT `UserBusiness`.`id`, `UserBusiness`.`user_id` AS `userId`, `UserBusiness`.`business_id` AS `businessId`, `UserBusiness`.`member_id` AS `memberId`, `UserBusiness`.`join_date` AS `joinDate`, `UserBusiness`.`total_points` AS `totalPoints`, `UserBusiness`.`available_points` AS `availablePoints`, `UserBusiness`.`lifetime_points` AS `lifetimePoints`, `UserBusiness`.`current_ranking_id` AS `currentRankingId`, `UserBusiness`.`last_activity` AS `lastActivity`, `UserBusiness`.`is_active` AS `isActive`, `UserBusiness`.`preferences`, `UserBusiness`.`qr_code_data` AS `qrCodeData`, `UserBusiness`.`created_at`, `UserBusiness`.`updated_at`, `business`.`id` AS `business.id`, `business`.`name` AS `business.name`, `business`.`business_code` AS `business.businessCode`, `currentRanking`.`id` AS `currentRanking.id`, `currentRanking`.`title` AS `currentRanking.title`, `currentRanking`.`level` AS `currentRanking.level`, `currentRanking`.`color` AS `currentRanking.color` FROM `user_businesses` AS `UserBusiness` LEFT OUTER JOIN `business` AS `business` ON `UserBusiness`.`business_id` = `business`.`id` LEFT OUTER JOIN `rankings` AS `currentRanking` ON `UserBusiness`.`current_ranking_id` = `currentRanking`.`id` WHERE `UserBusiness`.`id` = 10;
::1 - - [11/Jul/2025:02:01:39 +0000] "POST /api/users/join-business HTTP/1.1" 201 458 "-" "curl/8.7.1"
Executing (default): SELECT `id`, `first_name` AS `firstName`, `last_name` AS `lastName`, `email`, `phone_number` AS `phoneNumber`, `date_of_birth` AS `dateOfBirth`, `profile_image_url` AS `profileImageUrl`, `is_active` AS `isActive`, `last_login` AS `lastLogin`, `created_at`, `updated_at` FROM `users` AS `User` WHERE `User`.`id` = 7;
Getting business memberships for user: 7
Executing (default): SELECT `UserBusiness`.`id`, `UserBusiness`.`user_id` AS `userId`, `UserBusiness`.`business_id` AS `businessId`, `UserBusiness`.`member_id` AS `memberId`, `UserBusiness`.`join_date` AS `joinDate`, `UserBusiness`.`total_points` AS `totalPoints`, `UserBusiness`.`available_points` AS `availablePoints`, `UserBusiness`.`lifetime_points` AS `lifetimePoints`, `UserBusiness`.`current_ranking_id` AS `currentRankingId`, `UserBusiness`.`last_activity` AS `lastActivity`, `UserBusiness`.`is_active` AS `isActive`, `UserBusiness`.`preferences`, `UserBusiness`.`qr_code_data` AS `qrCodeData`, `UserBusiness`.`created_at`, `UserBusiness`.`updated_at`, `business`.`id` AS `business.id`, `business`.`name` AS `business.name`, `business`.`business_code` AS `business.businessCode`, `business`.`description` AS `business.description`, `business`.`category` AS `business.category`, `currentRanking`.`id` AS `currentRanking.id`, `currentRanking`.`title` AS `currentRanking.title`, `currentRanking`.`color` AS `currentRanking.color` FROM `user_businesses` AS `UserBusiness` LEFT OUTER JOIN `business` AS `business` ON `UserBusiness`.`business_id` = `business`.`id` LEFT OUTER JOIN `rankings` AS `currentRanking` ON `UserBusiness`.`current_ranking_id` = `currentRanking`.`id` WHERE `UserBusiness`.`user_id` = 7 ORDER BY `UserBusiness`.`created_at` DESC;
Found memberships: 1
Formatted memberships: [
  {
    id: 10,
    businessId: 1,
    businessName: 'Demo Business',
    businessCode: 'DEMO1',
    businessDescription: 'This is a demo business for testing. Change this in the admin panel.',
    businessCategory: '',
    memberId: 'TKAITQEK',
    joinDate: 2025-07-11T02:01:39.425Z,
    totalPoints: 100,
    availablePoints: 100,
    lifetimePoints: 100,
    currentRanking: 'Bronze Explorer',
    currentRankingColor: '#CD7F32',
    lastActivity: 2025-07-11T02:01:39.433Z,
    isActive: true,
    qrCodeData: {
      appUserId: 7,
      businessCode: 'DEMO1',
      joinDate: '2025-07-11T02:01:39.425Z',
      generatedAt: '2025-07-11T02:01:39.427Z'
    }
  }
]
::1 - - [11/Jul/2025:02:02:08 +0000] "GET /api/users/business-memberships HTTP/1.1" 200 652 "-" "curl/8.7.1"
Executing (default): SELECT `id`, `first_name` AS `firstName`, `last_name` AS `lastName`, `email`, `phone_number` AS `phoneNumber`, `date_of_birth` AS `dateOfBirth`, `profile_image_url` AS `profileImageUrl`, `is_active` AS `isActive`, `last_login` AS `lastLogin`, `created_at`, `updated_at` FROM `users` AS `User` WHERE `User`.`id` = 5;
Getting business memberships for user: 5
Executing (default): SELECT `UserBusiness`.`id`, `UserBusiness`.`user_id` AS `userId`, `UserBusiness`.`business_id` AS `businessId`, `UserBusiness`.`member_id` AS `memberId`, `UserBusiness`.`join_date` AS `joinDate`, `UserBusiness`.`total_points` AS `totalPoints`, `UserBusiness`.`available_points` AS `availablePoints`, `UserBusiness`.`lifetime_points` AS `lifetimePoints`, `UserBusiness`.`current_ranking_id` AS `currentRankingId`, `UserBusiness`.`last_activity` AS `lastActivity`, `UserBusiness`.`is_active` AS `isActive`, `UserBusiness`.`preferences`, `UserBusiness`.`qr_code_data` AS `qrCodeData`, `UserBusiness`.`created_at`, `UserBusiness`.`updated_at`, `business`.`id` AS `business.id`, `business`.`name` AS `business.name`, `business`.`business_code` AS `business.businessCode`, `business`.`description` AS `business.description`, `business`.`category` AS `business.category`, `currentRanking`.`id` AS `currentRanking.id`, `currentRanking`.`title` AS `currentRanking.title`, `currentRanking`.`color` AS `currentRanking.color` FROM `user_businesses` AS `UserBusiness` LEFT OUTER JOIN `business` AS `business` ON `UserBusiness`.`business_id` = `business`.`id` LEFT OUTER JOIN `rankings` AS `currentRanking` ON `UserBusiness`.`current_ranking_id` = `currentRanking`.`id` WHERE `UserBusiness`.`user_id` = 5 ORDER BY `UserBusiness`.`created_at` DESC;
Found memberships: 1
Formatted memberships: [
  {
    id: 5,
    businessId: 1,
    businessName: 'Demo Business',
    businessCode: 'DEMO1',
    businessDescription: 'This is a demo business for testing. Change this in the admin panel.',
    businessCategory: '',
    memberId: 'DEMO1000005',
    joinDate: 2025-07-10T21:10:54.204Z,
    totalPoints: 100,
    availablePoints: 100,
    lifetimePoints: 100,
    currentRanking: 'Bronze Explorer',
    currentRankingColor: '#CD7F32',
    lastActivity: 2025-07-10T21:10:54.210Z,
    isActive: true,
    qrCodeData: null
  }
]
::ffff:127.0.0.1 - - [11/Jul/2025:02:02:56 +0000] "GET /api/users/business-memberships HTTP/1.1" 200 541 "-" "Dart/3.8 (dart:io)"
Executing (default): SELECT `id`, `name`, `business_code` AS `businessCode`, `description`, `logo_url` AS `logoUrl`, `contact_email` AS `contactEmail`, `contact_phone` AS `contactPhone`, `address`, `operating_hours` AS `operatingHours`, `category`, `website`, `established`, `member_since` AS `memberSince`, `total_members` AS `totalMembers`, `features`, `social_media` AS `socialMedia`, `loyalty_benefits` AS `loyaltyBenefits`, `created_at`, `updated_at` FROM `business` AS `Business` WHERE `Business`.`business_code` = 'DEMO1';
Executing (default): SELECT `id`, `business_id` AS `businessId`, `name`, `colors`, `is_active` AS `isActive`, `created_at`, `updated_at` FROM `themes` AS `Theme` WHERE `Theme`.`business_id` = 1 AND `Theme`.`is_active` = 1 LIMIT 1;
Executing (default): SELECT `id`, `business_id` AS `businessId`, `level`, `title`, `points_required` AS `pointsRequired`, `benefits`, `color`, `icon_url` AS `iconUrl`, `created_at`, `updated_at` FROM `rankings` AS `Ranking` WHERE `Ranking`.`business_id` = 1 ORDER BY `Ranking`.`level` ASC;
Executing (default): SELECT `id`, `business_id` AS `businessId`, `title`, `description`, `code`, `discount_type` AS `discountType`, `discount_value` AS `discountValue`, `minimum_purchase` AS `minimumPurchase`, `expiration_date` AS `expirationDate`, `usage_limit` AS `usageLimit`, `used_count` AS `usedCount`, `is_active` AS `isActive`, `target_ranking_level` AS `targetRankingLevel`, `created_at`, `updated_at` FROM `coupons` AS `Coupon` WHERE `Coupon`.`business_id` = 1 AND `Coupon`.`is_active` = 1 ORDER BY `Coupon`.`created_at` DESC;
Executing (default): SELECT `id`, `business_id` AS `businessId`, `tier_level` AS `tierLevel`, `name`, `points_required` AS `pointsRequired`, `description`, `rewards`, `color`, `icon_url` AS `iconUrl`, `is_active` AS `isActive`, `sort_order` AS `sortOrder`, `created_at`, `updated_at` FROM `point_tiers` AS `PointTier` WHERE `PointTier`.`business_id` = 1 AND `PointTier`.`is_active` = 1 ORDER BY `tierLevel` ASC;
::ffff:127.0.0.1 - - [11/Jul/2025:02:02:58 +0000] "GET /api/public/business/DEMO1 HTTP/1.1" 200 2560 "-" "Dart/3.8 (dart:io)"
Executing (default): SELECT `id`, `first_name` AS `firstName`, `last_name` AS `lastName`, `email`, `phone_number` AS `phoneNumber`, `date_of_birth` AS `dateOfBirth`, `profile_image_url` AS `profileImageUrl`, `is_active` AS `isActive`, `last_login` AS `lastLogin`, `created_at`, `updated_at` FROM `users` AS `User` WHERE `User`.`id` = 5;
Getting business memberships for user: 5
Executing (default): SELECT `UserBusiness`.`id`, `UserBusiness`.`user_id` AS `userId`, `UserBusiness`.`business_id` AS `businessId`, `UserBusiness`.`member_id` AS `memberId`, `UserBusiness`.`join_date` AS `joinDate`, `UserBusiness`.`total_points` AS `totalPoints`, `UserBusiness`.`available_points` AS `availablePoints`, `UserBusiness`.`lifetime_points` AS `lifetimePoints`, `UserBusiness`.`current_ranking_id` AS `currentRankingId`, `UserBusiness`.`last_activity` AS `lastActivity`, `UserBusiness`.`is_active` AS `isActive`, `UserBusiness`.`preferences`, `UserBusiness`.`qr_code_data` AS `qrCodeData`, `UserBusiness`.`created_at`, `UserBusiness`.`updated_at`, `business`.`id` AS `business.id`, `business`.`name` AS `business.name`, `business`.`business_code` AS `business.businessCode`, `business`.`description` AS `business.description`, `business`.`category` AS `business.category`, `currentRanking`.`id` AS `currentRanking.id`, `currentRanking`.`title` AS `currentRanking.title`, `currentRanking`.`color` AS `currentRanking.color` FROM `user_businesses` AS `UserBusiness` LEFT OUTER JOIN `business` AS `business` ON `UserBusiness`.`business_id` = `business`.`id` LEFT OUTER JOIN `rankings` AS `currentRanking` ON `UserBusiness`.`current_ranking_id` = `currentRanking`.`id` WHERE `UserBusiness`.`user_id` = 5 ORDER BY `UserBusiness`.`created_at` DESC;
Found memberships: 1
Formatted memberships: [
  {
    id: 5,
    businessId: 1,
    businessName: 'Demo Business',
    businessCode: 'DEMO1',
    businessDescription: 'This is a demo business for testing. Change this in the admin panel.',
    businessCategory: '',
    memberId: 'DEMO1000005',
    joinDate: 2025-07-10T21:10:54.204Z,
    totalPoints: 100,
    availablePoints: 100,
    lifetimePoints: 100,
    currentRanking: 'Bronze Explorer',
    currentRankingColor: '#CD7F32',
    lastActivity: 2025-07-10T21:10:54.210Z,
    isActive: true,
    qrCodeData: null
  }
]
::ffff:127.0.0.1 - - [11/Jul/2025:02:03:03 +0000] "GET /api/users/business-memberships HTTP/1.1" 200 541 "-" "Dart/3.8 (dart:io)"
